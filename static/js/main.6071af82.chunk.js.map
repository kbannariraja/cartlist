{"version":3,"sources":["components/CartList.js","components/Filter.js","components/SortOption.js","components/ProdutListing.js","components/Search.js","components/Cart.js","components/Header.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["CartList","state","index","cartItems","isLoading","cartTotal","actual","discount","total","initCartItems","increaseDecreaseCartCount","item","method","count","cartprice","price","display","splice","setState","calculateTotalPrice","removeCartItem","reduce","acc","cartItemsWithCount","cartService","items","map","this","className","data","src","image","alt","name","onClick","type","value","length","Component","Filter","props","openModal","visible","closeModal","console","log","data-toggle","data-placement","title","width","height","effect","onClickAway","Sortoption","openModals","closeModals","checked","for","href","ProdutList","classname","Search","Cart","to","Header","MainComponents","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6071af82.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport cartService from \"../services/cart.json\";\nclass CartList extends Component {\n  state = {\n    index: 1,\n    cartItems: [],\n    isLoading: false,\n    cartTotal: {\n      actual: 0,\n      discount: 0,\n      total: 0,\n    },\n  };\n\n  componentDidMount() {\n    //this.initCartItems();\n    const cartItemsWithCount = cartService.items.map((item) => {\n      return { ...item, cartprice: { ...item.price }, count: 1 };\n    });\n    this.setState({ cartItems: cartItemsWithCount }, () => {\n      this.calculateTotalPrice();\n    });\n  }\n\n  componentWillUnmount() {}\n\n  initCartItems = () => {\n    // this.setState({ isLoading: true });\n    // getCartItems().then(response => {\n    //   this.setState({ cartItems: response.data, isLoading: false });\n    // }).catch(error => {\n    //   console.log(error);\n    // });\n  };\n\n  increaseDecreaseCartCount = (item, index, method) => {\n    const { cartItems } = this.state;\n    if (method === \"REMOVE\" && item.count === 1) return;\n    // Calculate the cart count\n    item.count = method === \"ADD\" ? item.count + 1 : item.count - 1;\n\n    // Cacluate the cart price\n    item.cartprice.actual = item.price.actual * item.count;\n    item.cartprice.display = item.price.display * item.count;\n    cartItems.splice(index, 1, item);\n    this.setState({ cartItems }, () => {\n      this.calculateTotalPrice();\n    });\n  };\n\n  removeCartItem = (index) => {\n    const cartItems = this.state.cartItems.splice(index, 1);\n    this.setState(cartItems, () => {\n      this.calculateTotalPrice();\n    });\n  };\n\n  calculateTotalPrice = () => {\n    const { cartItems } = this.state;\n    const total = cartItems.reduce((acc, item) => {\n      return acc + item.cartprice.display;\n    }, 0);\n\n    const actual = cartItems.reduce((acc, item) => {\n      return acc + item.cartprice.actual;\n    }, 0);\n\n    this.setState({\n      cartTotal: { total, actual, discount: total - actual },\n    });\n  };\n\n  render() {\n    const {cartItems, cartTotal } = this.state;\n    return (\n      <Fragment>\n        <div className=\"col-md-9\">\n          {cartItems.map((data, index) => {\n            return (\n              <div className=\"col-md-12 cart-list clearFix\">\n                <div className=\"col-md-1 col-sm-2 col-xs-3\">\n                  <img src={data.image} className=\"img-responsive\" alt={data.name}/>\n                </div>\n                <div className=\"col-md-11 col-sm-10 col-xs-9\">\n                  <div className=\"item_name\">{data.name}</div>\n                  <div className=\"item-last cart\">\n                    <div className=\"col-md-5 col-sm-4 cart_price\">\n                      <div className=\"price\">\n                        &#x20b9;{data.cartprice.actual}\n                      </div>\n                      <div className=\"spaical_price price\">\n                        {data.cartprice.display}\n                      </div>\n                      <div className=\"off_per price\">{data.discount}% 0ff</div>\n                    </div>\n                    <div className=\"counter col-md-4 col-sm-4 col-xs-12\">\n                      <span\n                        className=\"minus\"\n                        onClick={() => {\n                          this.increaseDecreaseCartCount(data, index, \"REMOVE\");\n                        }}\n                      >\n                        -\n                      </span>\n                      <input type=\"text\" value={data.count} />\n                      <span\n                        className=\"plus\"\n                        onClick={() => {\n                          this.increaseDecreaseCartCount(data, index, \"ADD\");\n                        }}\n                      >\n                        +\n                      </span>\n                    </div>\n                    <div className=\"col-md-3 col-sm-4 remove-btn\">\n                      <div\n                        onClick={() => {\n                          this.removeCartItem(index);\n                        }}\n                      >\n                        Remove\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"col-md-3 price-details\">\n          <div className=\"price-heading\">Price Details</div>\n          <div className=\"clearFix price-sec\">\n            <div className=\"pull-left\">Price ({cartItems.length} item)</div>\n            <div className=\"pull-right\">&#x20b9;{cartTotal.total}</div>\n          </div>\n          <div className=\"clearFix price-sec\">\n            <div className=\"pull-left\">Discount</div>\n            <div className=\"pull-right\">&#x20b9;{cartTotal.discount}</div>\n          </div>\n          <div className=\"clearFix price-total\">\n            <div className=\"pull-left\">Total Payable</div>\n            <div className=\"pull-right\">&#x20b9;{cartTotal.actual}</div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default CartList;","import React, { Component, Fragment } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n        }\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({ visible: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        console.log(\"test\")\r\n        this.setState({ visible: false });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"col-md-2 hidden-sm hidden-xs\">\r\n                    <div className=\"fliter-option-desk\">\r\n                        <div className=\"pdRL_15 sort-label\">Filters</div>\r\n                        <div className=\"price-slider-desk\">\r\n                            <form className=\"range-field my-4 w-100 text-center\">\r\n                                <input type=\"range\" className=\"custom-range\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Tooltip on bottom\" />\r\n                            </form>\r\n                            <div className=\"text-center price_text mb-5\">Price</div>\r\n                            <div className=\"text-center\">\r\n                                <button className=\"btn apply-btn-desk\">Apply</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hidden-lg hidden-md col-xs-6 fliter-option-mobile\" >\r\n                    <i className=\"fa fa-filter\" onClick={() => this.openModal()}></i>Filter\r\n                    {this.state.visible === true &&\r\n                        <Modal visible={this.state.visible} width=\"80%\" height=\"250\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                            <div className=\"price-slider\">\r\n                                <div className=\"fliter-heading\">Filter Option</div>\r\n                                <input type=\"range\" className=\"custom-range\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Tooltip on bottom\" />\r\n                                <div className=\"text-center price_text\">Price</div>\r\n                                <div className=\"text-center btn-action\">\r\n                                    <button className=\"btn cancel-btn\" onClick={() => this.closeModal()}>Cancel</button>\r\n                                    <button className=\"btn apply-btn\" onClick={() => this.closeModal()}>Apply</button>\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Filter;","import React, { Component, Fragment } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nclass Sortoption extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n\r\n    openModals = () => {\r\n        this.setState({ visible: true });\r\n    }\r\n\r\n    closeModals = () => {\r\n        this.setState({ visible: false });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <div className=\"hidden-lg hidden-md\">\r\n                    <i className=\"fa fa-sort mr-2\" onClick={() => this.openModals()}></i>Sort\r\n                        {this.state.visible === true &&\r\n                        <Modal visible={true} width=\"80%\" height=\"250\" effect=\"fadeInDown\" onClickAway={() => this.closeModals()}>\r\n                            <div>\r\n                                <div className=\"fliter-heading text-left\">Sort Option</div>\r\n                                <div className=\"text-left pd_10\">\r\n                                    <input type=\"radio\" name=\"radio-group\" checked />\r\n                                    <label for=\"test1\">Price &#8208;&#8208; High Low</label>\r\n                                </div>\r\n                                <div className=\"text-left pd_10\">\r\n                                    <input type=\"radio\" name=\"radio-group\" checked />\r\n                                    <label for=\"test1\">Price &#8208;&#8208; Low High</label>\r\n                                </div>\r\n                                <div className=\"text-left pd_10\">\r\n                                    <input type=\"radio\" name=\"radio-group\" checked />\r\n                                    <label for=\"test1\">Discount</label>\r\n                                </div>\r\n                                <div className=\"text-center btn-action\">\r\n                                    <button className=\"btn cancel-btn\" onClick={() => this.closeModals()}>Cancel</button>\r\n                                    <button className=\"btn apply-btn\" onClick={() => this.closeModals()}>Apply</button>\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    }\r\n                </div>\r\n                <div className=\"sort-option clearFix pd_15 hidden-sm hidden-xs\">\r\n                    <div className=\"pull-left pdRL_15 sort-label\">Sort By</div>\r\n                    <div className=\"high_low pull-left pdRL_15\">\r\n                        <a href=\"javascript:void(0);\" className=\"select\">Price &#8208;&#8208; High Low</a>\r\n                    </div>\r\n                    <div className=\"high_low pull-left pdRL_15\">\r\n                        <a href=\"javascript:void(0);\">Price &#8208;&#8208; Low High</a>\r\n                    </div>\r\n                    <div className=\"high_low pull-left pdRL_15\">\r\n                        <a href=\"javascript:void(0);\">Discount</a>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Sortoption;","\r\nimport React, { Component, Fragment } from 'react';\r\nimport Filter from '../components/Filter';\r\nimport Sortoption from '../components/SortOption';\r\nimport cartService from '../services/cart.json';\r\nclass ProdutList extends Component {\r\n    state = {\r\n        cartItems: cartService.items,\r\n    };\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        //this.initCartItems();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    initCartItems = () => {\r\n\r\n        // this.setState({ isLoading: true });\r\n        // getCartItems().then(response => {\r\n        //   this.setState({ cartItems: response.data, isLoading: false });\r\n        // }).catch(error => {\r\n        //   console.log(error);\r\n        // });\r\n    }\r\n    render() {\r\n        const { cartItems } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"visible-sm visible-xs sort-option-mobile col-xs-6\">\r\n                    <Sortoption />\r\n                </div>\r\n                <Filter />\r\n                <div className=\"col-md-10 br_right\">\r\n                    <div className=\"hidden-sm hidden-xs\">\r\n                        <Sortoption />\r\n                    </div>\r\n                    <div classname=\"cart_container\">\r\n                        {cartItems.map((data) => {\r\n                            return (\r\n                                <div className=\"col-20\">\r\n                                    <div><img src={data.image} className=\"img-responsive\" /></div>\r\n                                    <div className=\"item_name\">{data.name}</div>\r\n                                    <div className=\"cart_price clearFix pdtb_10\">\r\n                                        <div className=\"price\">&#x20b9;{data.price.actual}</div>\r\n                                        <div className=\"spacial_price price\">{data.price.display}</div>\r\n                                        <div className=\"off_per price\">{data.discount}% off</div>\r\n                                    </div>\r\n                                    <div className=\"clearFix text-center\">\r\n                                        <button className=\"btn add_cart_btn \">Add to Cart</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )\r\n\r\n                        })}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProdutList;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass Search extends Component {\r\n    state = {\r\n\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"search-bar pull-left\">\r\n                    <i className=\"fa fa-search\">\r\n                    </i>\r\n                </div>\r\n            </Fragment>\r\n                );\r\n            }\r\n        }\r\n        \r\n        \r\nexport default Search;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Cart extends Component {\r\n    state = {\r\n\r\n    };\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Link to=\"/cartlist\">\r\n                    <div className=\"car-icon pull-left\">\r\n                        <span className=\"fa fa-shopping-cart\"></span>\r\n                        <div className=\"cart-count\">1</div>\r\n                    </div>\r\n                </Link>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Cart;","\r\nimport React, { Component, Fragment } from 'react';\r\nimport Search from '../components/Search';\r\nimport Cart from '../components/Cart';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n  state = {\r\n\r\n  };\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <header>\r\n          <Link to=\"/produtlist\" className=\"Logo\">\r\n            <div><i className=\"fa fa-star checked\"></i></div>\r\n          </Link>\r\n          <div className=\"right-nav\">\r\n            <Search />\r\n            <Cart />\r\n          </div>\r\n        </header>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport CartList from './CartList'\r\nimport ProdutList from './ProdutListing'\r\nimport Header from '../components/Header'\r\nexport default function MainComponents() {\r\n    return (\r\n        <Router>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Header className=\"col-md-12\" />\r\n                    <Switch>\r\n                        <Route exact path=\"/cartlist\">\r\n                            <CartList />\r\n                        </Route>\r\n                        <Route path=\"/produtlist\">\r\n                            <ProdutList />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import React from 'react';\nimport MainComponent from './components/MainComponent'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent></MainComponent>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}